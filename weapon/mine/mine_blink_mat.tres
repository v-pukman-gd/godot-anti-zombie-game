[gd_resource type="ShaderMaterial" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
operator = 6

[sub_resource type="VisualShaderNodeVectorCompose" id=2]
default_input_values = [ 0, 1.0, 1, 0.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeColorConstant" id=3]
constant = Color( 1, 0, 0, 1 )

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarConstant" id=5]
constant = 5.0

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
function = 0

[sub_resource type="VisualShader" id=8]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(1.000000, 0.000000, 0.000000);
	float n_out2p1 = 1.000000;

// Input:3
	float n_out3p0 = TIME;

// Scalar:4
	float n_out4p0 = 5.000000;

// ScalarOp:5
	float n_out5p0 = n_out3p0 * n_out4p0;

// ScalarFunc:6
	float n_out6p0 = sin(n_out5p0);

// ScalarOp:10
	float n_in10p0 = 0.00000;
	float n_out10p0 = max(n_in10p0, n_out6p0);

// VectorCompose:12
	float n_in12p1 = 0.00000;
	float n_in12p2 = 0.00000;
	vec3 n_out12p0 = vec3(n_out10p0, n_in12p1, n_in12p2);

// Output:0
	ALBEDO = n_out2p0;
	EMISSION = n_out12p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 159.143, -108.235 )
nodes/fragment/0/position = Vector2( 1120, -60 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( 260, -60 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( 80, 200 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( 100, 300 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( 280, 200 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( 460, 220 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 660, 200 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( 860, 40 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 5, 0, 4, 0, 5, 1, 5, 0, 6, 0, 6, 0, 10, 1, 12, 0, 0, 5, 10, 0, 12, 0 )

[resource]
shader = SubResource( 8 )
